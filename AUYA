-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local TextLabel = Instance.new("TextLabel")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

TextLabel.Parent = ScreenGui
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
TextLabel.Position = UDim2.new(0.36608094, 0, 0.0524809174, 0)
TextLabel.Size = UDim2.new(0, 200, 0, 50)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "00:20"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 66.000
TextLabel.TextStrokeTransparency = 0.000

-- Scripts:

local function LNKDIBV_fake_script() -- TextLabel.LocalScript 
	local script = Instance.new('LocalScript', TextLabel)

	local rep = game:GetService("ReplicatedStorage")
	local minutes = rep:WaitForChild("Minutes")
	local seconds = rep:WaitForChild("Seconds")
	local text = script.Parent
	
	if seconds.Value <= 9 then
		text.Text = tostring(minutes.Value)..":0"..tostring(seconds.Value)
	else
		text.Text = tostring(minutes.Value)..":"..tostring(seconds.Value)
	end
	
	minutes:GetPropertyChangedSignal("Value"):Connect(function()
		if seconds.Value <= 9 then
			text.Text = tostring(minutes.Value)..":0"..tostring(seconds.Value)
		else
			text.Text = tostring(minutes.Value)..":"..tostring(seconds.Value)
		end
	end)
	
	seconds:GetPropertyChangedSignal("Value"):Connect(function()
		if seconds.Value <= 9 then
			text.Text = tostring(minutes.Value)..":0"..tostring(seconds.Value)
		else
			text.Text = tostring(minutes.Value)..":"..tostring(seconds.Value)
		end
	end)
end
coroutine.wrap(LNKDIBV_fake_script)()
local function YIVNK_fake_script() -- ScreenGui.Script 
	local script = Instance.new('Script', ScreenGui)

	Time = 20 -- seconds
	repeat wait() until game:IsLoaded()
	wait(Time)
	local PlaceID = game.PlaceId
	local AllIDs = {}
	local foundAnything = ""
	local actualHour = os.date("!*t").hour
	local Deleted = false
	function TPReturner()
		local Site;
		if foundAnything == "" then
			Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
		else
			Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
		end
		local ID = ""
		if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
			foundAnything = Site.nextPageCursor
		end
		local num = 0;
		for i,v in pairs(Site.data) do
			local Possible = true
			ID = tostring(v.id)
			if tonumber(v.maxPlayers) > tonumber(v.playing) then
				for _,Existing in pairs(AllIDs) do
					if num ~= 0 then
						if ID == tostring(Existing) then
							Possible = false
						end
					else
						if tonumber(actualHour) ~= tonumber(Existing) then
							local delFile = pcall(function()
								delfile("NotSameServers.json")
								AllIDs = {}
								table.insert(AllIDs, actualHour)
							end)
						end
					end
					num = num + 1
				end
				if Possible == true then
					table.insert(AllIDs, ID)
					wait()
					pcall(function()
						writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
						wait()
						game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
					end)
					wait(4)
				end
			end
		end
	end
	
	function Teleport()
		while wait() do
			pcall(function()
				TPReturner()
				if foundAnything ~= "" then
					TPReturner()
				end
			end)
		end
	end
end
coroutine.wrap(YIVNK_fake_script)()
